config {
    type: "incremental",
    uniqueKey: ["date", "country_code", "browser", "browser_version", "app_id", "channel_url", "sp_type", "partner", "channel_id", "user_id", "feed"],
    dependencies: ["uniqueKey_check"],
    bigquery: {
        partitionBy: "date",
        updatePartitionFilter: "date > '2024-02-27'"
    },

    assertions: { nonNull: ["app_id"] }
}

pre_operations {
  DECLARE event_timestamp DATE;
  SET event_timestamp  =  (
    ${when(incremental(),
    `SELECT max(date) FROM ${self()}`,
    `SELECT DATE("2023-01-01")`)}
  )
}

-- DECLARE event_timestamp_checkpoint DEFAULT TIMESTAMP("2000-01-01 00:00:00 UTC");

-- SET event_timestamp_checkpoint = (
-- ${when(incremental(),
-- `SELECT max(ingestionTime) FROM ${self()}`,
-- `SELECT TIMESTAMP("2000-01-01 00:00:00 UTC")`)}
-- );

 SELECT 
     date,
     country_code,
     browser,
     browser_version,
     app_id,
     case when length(channel_url) > 16 then left(channel_url,16) else channel_url end as channel_url,
     sp_type,
     COUNT(*) as searches,
     partner,
     channel_id,
     user_id,
     feed
 FROM (
  SELECT
  DATE(DATE_TRUNC(timestamp, DAY)) as date,
  country as country_code,
  ${segment.BrowserName("browser")} as browser,
  browser_version,
  REPLACE(apl_id,' ','') as app_id,
  case when 
    (CASE WHEN INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1) = 0 THEN ''
    ELSE SUBSTR(${segment.ReplaceStr("srch_ngn_url")}, INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1)+3, (INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&q=', 1, 1)-(INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1)+3))) END) like '%�%'
  then left(CASE WHEN INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1) = 0 THEN ''
    ELSE SUBSTR(${segment.ReplaceStr("srch_ngn_url")}, INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1)+3, (INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&q=', 1, 1)-(INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1)+3))) END,8)
  else CASE WHEN INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1) = 0 THEN ''
    ELSE SUBSTR(${segment.ReplaceStr("srch_ngn_url")}, INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1)+3, (INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&q=', 1, 1)-(INSTR(${segment.ReplaceStr("srch_ngn_url")}, '&n=', 1, 1)+3))) END
  end as channel_url,
  is_hpok as is_hp,
  srch_ngn as sp_type,
  case when lower(company_name) like 'yahoo%' then 'Yahoo'
       when lower(company_name) like 'firstofferz' or lower(srch_ngn) like '%foz%' then 'FirstOfferz'
       when lower(company_name) like 'aka' then 'Aka'
       when lower(company_name) like 'rise' then 'IronSource'
       when lower(company_name) like 'evernetix' then 'Evernetix'
       when lower(company_name) like 'candytech' then 'Perion'
       else company_name end as partner,
  'pc' as tbl_source,
  IFNULL(CASE WHEN LENGTH(channel_id) > 8 THEN '' ELSE channel_id END,'') as channel_id,
  suid as user_id,
  CASE WHEN (LENGTH(CAST(month_instok AS STRING)) = 8) THEN SAFE.PARSE_DATE('%Y%m%d', CAST(month_instok AS STRING)) 
       ELSE MIN(date(timestamp)) over(partition by suid) END  as install_date,
  CASE WHEN lower(company_name) = 'skenzo' THEN SUBSTR(srch_ngn_url, INSTR(srch_ngn_url, 'https://', 1, 1)+8, (INSTR(srch_ngn_url, '.com', 1, 1)-(INSTR(srch_ngn_url, 'https://', 1, 1)+8)))
       WHEN INSTR(${segment.FeedReplace("srch_ngn_url")}, 'gd=', 1, 1) = 0 THEN ''
       ELSE SUBSTR(${segment.FeedReplace("srch_ngn_url")}, INSTR(${segment.FeedReplace("srch_ngn_url")}, 'gd=', 1, 1)+3, 9) END as feed
  FROM ${ref("search_log")} 
  WHERE date(_partitiontime) = event_timestamp
  
   ${when(incremental(), `and date > (SELECT ifnull(max(date),curren_date()) FROM ${self()})`)}
  AND NOT(suid LIKE '178BFBFF00100F62      GEA534RV0118TA00259C7D5A9F' AND DATE(_PARTITIONTIME) = '2022-05-10' AND REPLACE(apl_id,' ','') LIKE '1495373619430762')
  AND REGEXP_CONTAINS(suid, r'[^\w .-]') = FALSE
  AND suid not like "%�%" and suid not like "%ɚ%" and suid not like "%ə%" 
  AND RIGHT(suid,5) not like '%-%'
  AND lower(country) <> 'il'
  AND apl_id <> '1619447267835692'


  )
  GROUP BY 1,2,3,4,5,6,7,9,10,11,12
